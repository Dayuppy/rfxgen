name: Linux

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PROJECT_NAME: "rfxgen"
      PROJECT_VERSION: "2.5"
      RELEASE_PATH: "rfxgen_dev_linux_x64"
      BUILD_PATH: "rfxgen\\build"
    
    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
      
    - name: Checkout raylib repo
      uses: actions/checkout@v2
      with:
        repository: raysan5/raylib
        path: raylib
        
    - name: Setup Release Paths
      run: |
        echo "RELEASE_PATH=${{ env.PROJECT_NAME }}_v${{ env.PROJECT_VERSION }}_linux_x64" >> $GITHUB_ENV
        echo "BUILD_PATH=${{ env.PROJECT_NAME }}\\build" >> $GITHUB_ENV
      shell: bash
    
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev
        mkdir ${{ env.RELEASE_PATH }}
        dir
      shell: bash
        
    - name: Build raylib Library
      run: |
        cd raylib/src
        gcc --version
        make PLATFORM=PLATFORM_DESKTOP CC=gcc RAYLIB_LIBTYPE=STATIC -DSUPPORT_RSHAPES

    - name: Build Product
      run: |
        cd ${{ env.PROJECT_NAME }}
        make PLATFORM=PLATFORM_DESKTOP CC=gcc -B

    - name: Generate Artifacts
      run: |
        dir ${{ env.BUILD_PATH }}
        copy /Y .\${{ env.BUILD_PATH }}\${{ env.PROJECT_NAME }}.exe .\${{ env.RELEASE_PATH }}\${{ env.PROJECT_NAME }}.exe
        copy /Y .\${{ env.PROJECT_NAME }}\README.md .\${{ env.RELEASE_PATH }}\README.md
        copy /Y .\${{ env.PROJECT_NAME }}\LICENSE .\${{ env.RELEASE_PATH }}\LICENSE
        dir ${{ env.RELEASE_PATH }}
        7z a .\${{ env.RELEASE_DIR_NAME }}.zip .\${{ env.RELEASE_PATH }}
      shell: cmd

    # Issue: Double zip: https://github.com/actions/upload-artifact/issues/39
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RELEASE_PATH }}.zip
        path: ./${{ env.RELEASE_PATH }}.zip
        
    # Alternative: https://github.com/marketplace/actions/gh-release
    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: ${{ env.RELEASE_PATH }}.zip
        asset_path: ./${{ env.RELEASE_PATH }}.zip
        asset_content_type: application/zip
      if: github.event_name == 'release' && github.event.action == 'published'
